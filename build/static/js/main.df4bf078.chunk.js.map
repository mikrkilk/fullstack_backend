{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Notification.js","components/Persons.js","services/entries.js","index.js"],"names":["Filter","props","value","filt","onChange","chg","Inpt","text","val","PersonForm","name","number","namChg","numChg","subm","onSubmit","type","Notification","message","status","className","Person","onPush","onClick","Persons","content","filter","map","person","toLowerCase","includes","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","error","setError","useEffect","entryService","initEntries","setMessage","msg","setTimeout","event","target","preventDefault","find","undefined","window","confirm","console","log","pers","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df4bf078.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n      <div>Filter shown with: \r\n        <input value={props.filt} onChange={props.chg}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ name, number, namChg, numChg, subm }) => {\r\n  return (\r\n      <div>\r\n          <form onSubmit={subm}>\r\n            <Inpt text=\"Name:\" val={name} chg={namChg} key='name'/>\r\n            <Inpt text=\"Number:\" val={number} chg={numChg} key='num'/>\r\n            <button type=\"submit\">Add</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Inpt = ({text, val, chg}) => {\r\n    return (\r\n      <div>{text} <input value={val} onChange={chg}/></div>\r\n    )\r\n}\r\n\r\n\r\nexport default PersonForm","import React from 'react'\r\nconst Notification = ({ message, status}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={status}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\nexport default Notification","import React from 'react'\r\n\r\nconst Persons = ({content, onPush, filter}) => {\r\n  return (\r\n      <div>\r\n        <ul>\r\n            {content.map(person => person.name.toLowerCase().includes(filter.toLowerCase())?<Person name={person.name} number={person.number} key={person.name} onPush={()=>onPush(person.id)}/>:'')}\r\n        </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Person = ({name, number, onPush}) => {\r\n    return(\r\n        <li>{name} {number} <button onClick={onPush}>delete</button></li>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(response=>response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject).then(response=>response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response=>response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`).then(response=>response.data)\r\n  }\r\n\r\nexport default { getAll, create, update, remove}","import React, { useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Notification from './components/Notification';\nimport Persons from './components/Persons';\nimport entryService from './services/entries'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [error, setError] = useState({message:null,status:\"note\"})\n\n  useEffect(() => {\n    entryService.getAll()\n      .then(initEntries => {\n        setPersons(initEntries)\n      })\n  }, [])\n\n  const addEntry = (event) => {\n    event.preventDefault()\n    const person = persons.find(({name}) => name===newName)\n    if(!(person===undefined)) {\n      if(window.confirm(newName+' is already in the phonebook! \\n Update with a new number?')) {\n        console.log(person)\n        entryService.update(person.id,{...person, number:newNumber})\n        .then(response=>{\n          setPersons(persons.map(pers => pers.id !==person.id?pers:response))\n          setNewName('')\n          setNewNumber('')\n          setMessage({message:\"Updated \"+newName,status:'note'})\n        })\n        .catch(error=>setMessage({message:\"Could not edit \"+newName+\": \"+error.response.data.error,status:'error'}))\n      }\n    }\n    else {\n      entryService.create({name: newName, number: newNumber})\n      .then(response => {\n        setMessage({message:\"Added \"+newName,status:'note'})\n        // To get the ID for the new person. Not optimal\n        entryService.getAll()\n        .then(initEntries => {\n        setPersons(initEntries)\n        })\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error=>setMessage({message:\"Could not add \"+newName+\": \"+error.response.data.error,status:'error'}))\n    }\n  }\n\n  const setMessage=(msg) =>{\n    setError(msg)\n    setTimeout(()=> {\n      setError({message:null,status:\"note\"})\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  \n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  \n  const updateFilter = (event) => setFilter(event.target.value)\n\n  const removeEntry = (id) => {\n    entryService.remove(id)\n    .then(response=>{\n      setMessage({message:\"Entry removed successfully\",status:'note'})\n      setPersons(persons.filter(person=>person.id!==id))\n    })\n    .catch(error=>setMessage({message:error,status:'error'}))\n  }\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={error.message} status={error.status} />\n\n      <Filter filt={filter} chg={updateFilter}/>\n\n      <h3>Add a new</h3>\n\n      <PersonForm \n        name={newName} number={newNumber} namChg={handleNameChange} numChg={handleNumberChange} subm={addEntry}/>\n\n      <h3>Numbers</h3>\n\n      <Persons content={persons} onPush={removeEntry} filter={filter} />\n    </div>\n  )\n}\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}